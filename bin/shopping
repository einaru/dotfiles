#!/usr/bin/env python3
"""
    Calculate total shopping costs
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

    Copyright: (c) 2014 Einar Uvsløkk
    Free use of this software is granted under the terms of the
    GNU General Public License (GPL) version 3 or later.
"""
import sys
import argparse

receipt = """
Varer:              {cost:>15.02f}
{hr}
{goods}
{hr}
Rabatt:             {discount:>15.02f}
Frakt:              {shipping:>15.02f}
Toll:               {toll:>15.02f}
{hr}
Grunnlag for mva.:  {mva_base:>15.02f}
Mva.:               {mva:>15.02f}
{hr}
Total:              {total:>15.02f}
{HR}
"""


def parse_command_line():
    parser = argparse.ArgumentParser()

    parser.add_argument('cost', type=float, nargs='+',
                        help='product cost')
    parser.add_argument('-d', metavar='DISCOUNT', type=float, default=0,
                        dest='discount',
                        help='discount to be applied to total product costs '
                        '(%(default).02f)')
    parser.add_argument('-s', metavar='SHIPPING', type=float, default=0,
                        dest='shipping',
                        help='additional shipping costs (%(default).02f)')
    parser.add_argument('-t', '--toll', action='store_true',
                        help='calculate toll costs')
    parser.add_argument('-m', '--moms', action='store_true',
                        help='calculate mva. costs')
    parser.add_argument('-v', '--verbose', action='store_true',
                        help='show a more verbose receipt calculation')

    args = parser.parse_args()

    return args


def main():
    args = parse_command_line()

    discount, toll, mva = 0, 0, 0
    cost = sum(args.cost)
    shipping = args.shipping

    if args.discount > 0 and args.discount < 100:
        discount = (cost * (args.discount / 100)) * -1

    mva_base = cost + discount + shipping

    if args.toll:
        toll = mva_base * 0.107
        mva_base += toll

    if args.moms:
        mva = mva_base * 0.25

    goods = []
    for i, p in enumerate(args.cost):
        goods.append('· vare {:<2} {:>25.02f}'.format(i + 1, p))

    total = mva_base + mva

    if args.verbose:
        print(receipt.format(
            cost=cost,
            goods='\n'.join(goods),
            discount=discount,
            shipping=shipping,
            toll=toll,
            mva_base=mva_base,
            mva=mva,
            total=total,
            hr='-' * 35,
            HR='=' * 35,
        ), end='')
    else:
        print('{:.02f}'.format(total))

    return 0


if __name__ == '__main__':
    sys.exit(main())
